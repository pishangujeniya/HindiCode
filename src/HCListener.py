from Config import Config
from Helpers.Logger import Logger
from g4Generated.HindiCodeListener import HindiCodeListener
from g4Generated.HindiCodeParser import HindiCodeParser


class HCListener(HindiCodeListener):
    DEBUG = Config.DEBUG
    output = None

    def __init__(self, output):
        self.output = output
        self.output.write('\n# Generated by HindiCode Language\n')
        Logger.logger(output=output, log_text="Debug : " + str(self.DEBUG))

    def enterHindicode(self, ctx: HindiCodeParser.HindicodeContext):
        Logger.logger(self.output, 'Entered HindiCode')

    def exitHindicode(self, ctx: HindiCodeParser.HindicodeContext):
        Logger.logger(self.output, 'Exited HindiCode')
        self.output.write("\n")

    def enterStmt(self, ctx: HindiCodeParser.StmtContext):
        Logger.logger(self.output, "Entered stmt")

    def exitStmt(self, ctx: HindiCodeParser.StmtContext):
        Logger.logger(self.output, "Exited stmt")

    def enterSimple_stmt(self, ctx: HindiCodeParser.Simple_stmtContext):
        Logger.logger(self.output, 'Entered Simple_stmt')

    def exitSimple_stmt(self, ctx: HindiCodeParser.Simple_stmtContext):
        Logger.logger(self.output, 'Exited Simple_stmt')

    def enterInt_stmt(self, ctx: HindiCodeParser.Int_stmtContext):
        Logger.logger(self.output, 'Entered Int_stmt')
        variable_name = ctx.NAME().getText()
        variable_value = ctx.REAL_NUMBER()
        self.output.write(str(variable_name) + str(" = ") + str(variable_value))

    def enterBool_stmt(self, ctx: HindiCodeParser.Bool_stmtContext):
        Logger.logger(self.output, "Entered Bool_stmt")
        variable_name = ctx.NAME()
        variable_value = None
        if ctx.TRUE() is None and ctx.FALSE() is not None:
            variable_value = False
        else:
            variable_value = True
        self.output.write(str(variable_name) + str(" = ") + str(variable_value))

    def exitInt_stmt(self, ctx: HindiCodeParser.Int_stmtContext):
        Logger.logger(self.output, 'Exited Int_stmt')
